{
    "name": "Progress Indicators",
    "texts": {
        "definition": "The player is given information about his current progress towards a closure in addition to the configuration of game elements involved",
        "description": [
            "The most explicit use of [Progress Indicator](progress-indicators) is to have exact numerical values for indicating the current state and also the required value for reaching the goal. Some games do not require a definite value for reaching the goal, instead using relative numerical values to determine the winner or measuring the progression of the players related to other players.",
            "[Progress Indicators,](progress-indicators) which do not represent the progress in an exact manner are vague [Progress Indicators](progress-indicators). The difference between an exact and vague indicator is that the vague indicator is subject to different interpretations, while the exact indicator is an objective measurement of the progress."
        ],
        "examples": [
            "some racing games and roleplaying games have maps which indicate how far the players have traveled by filling in paths showing the progress.",
            "in \"Zelda: Link to the Past\" a subgoal is to gather nine crystals to be able to save the Princess Zelda. Progress in this task is indicated by arranging the crystals in an octagon, where the collected crystals are placed in the empty place holders."
        ],
        "usage": [
            "The first thing to consider is that which actions and goals of the game require [Progress Indicators](progress-indicators). The second is to figure out how to measure the progress towards the goal and how to indicate progress. The numerical values are usually the simplest way to achieve this, especially when progress can be measure easily as in [Extended Actions](extended-actions). [Score](score) can also easily be measured but is in some cases, especially where one can lose points, better regarded as a [Status Indicator](status-indicators). Even when the [Progress Indicator](progress-indicators) does not allow for a player knowing the exact requirements for achieving a goal, it usually gives the player a more concrete way of comparing the actual outcome to the required outcome.",
            "However, [Progress Indicators](progress-indicators) do not have to be tied to an explicit numerical value. [Illusionary Rewards](illusionary-rewards) allow [Progress Indicators](progress-indicators) within the [Game World](game-world) without breaking a [Consistent Reality Logic](consistent-reality-logic), for example showing progress in completing a [Combo](combos). Games requiring a completed [Collection](collection) of certain items can indicate the progression as a diagram, where the items already collected and items missing are displayed to the player. Similarly, the positions of game elements can be clear [Progress Indicators](progress-indicators) when players are trying to achieve [Alignment](alignment) goals. In [Races](race), the player's own [Movement](movement) is a [Progress Indicator](progress-indicators) of how far they have gone and how far they have to go, and [Traverse](traverse) goals, as well as [Connection](connection) to a lesser degree, can be seen as having self-contained [Progress Indicators](progress-indicators). Actions with [Time Limits](time-limits) are often associated with [Progress Indicators](progress-indicators) indicating how much time there is left. [Supporting Goals](supporting-goals) are a form of [Progress Indicator](progress-indicators) of how close to achieving the main goal a player is.",
            "[Progress Indicators](progress-indicators) may be modulated by information patterns that can modulate information about the characteristics of game elements. For example, modulating [Progress Indicator](progress-indicators) with [Uncertainty of Information](uncertaintyof-information) means that there is a certain level of uncertainty or unreliability associated with how the progress of game play is presented to the player. Concrete examples of this kind of modulation can be seen in the way the appearance of a [Boss Monster](boss-monsters) gradually changes when the player damages it in \"Metroid\" \"Fusion, Zelda\" series and many other games with enemies requiring multiple hits to eliminate. Modulating [Progress Indicator](progress-indicators) with [Perfect Information](perfect-information) can be difficult, however; even if some measured value is updated as the player progresses towards a goal, this may not represent the difficulty of actually achieving the goal. This problem may be mitigated somewhat with providing players with the exact method to measure progress."
        ],
        "consequences": [
            "[Progress Indicators](progress-indicators) remove the necessity of [Memorizing](memorizing) when actions or events started and how long it takes for them to be completed. As such, they are often associated with [Extended Actions](extended-actions) or actions that have [Delayed Effects](delayed-effects), partially since they offer means to provide [Public Information](public-information) or [Direct Information](direct-information) about processes which can be difficult to show without [Book-Keeping Tokens](book-keeping-tokens). The mere presence of a [Progress Indicator](progress-indicators) can strengthen players' perception that they have a [Perceived Chance to Succeed](perceived-chanceto-succeed) as the indicator is presented the player only as long as it is possible to succeed. This use of [Progress Indicators](progress-indicators) can be found in games using [Rhythm-Based Actions](rhythm-based-actions) and other forms of [Dexterity-Based Actions](dexterity-based-actions).",
            "An example of the first kind of [Progress Indicator](progress-indicators) can be found in \"America's Army\" when taking photos of the mission objectives; players doing this cannot do anything else and they risk being shot by enemies while completing the action which takes several seconds. The position and the movement of the bowling ball after a throw is a good example of the latter kind of a [Progress Indicator](progress-indicators). This is also a good example of a vague [Progress Indicator](progress-indicators). Both examples show how [Progress Indicator](progress-indicators) can be used to raise [Tension](tension), especially if the indicator is vague or when the [Extended Action](extended-actions) is also an [Interruptible Action](interruptible-actions).",
            "[Progress Indicators](progress-indicators) very easily create [Hovering Closures](hovering-closures) as players are presented with the level required and their exact level of completion. The use of [Progress Indicators](progress-indicators) further gives the player a more concrete and frequent sense of achievement as the [Progress Indicator](progress-indicators) naturally splits the overarching closure into smaller progression closures. The indicator gives a player the possibility to compare his status in the game to other players and also to previous performances, especially in games using [Score](score) as a [Progress Indicator](progress-indicators).",
            "[Progress Indicator](progress-indicators) is required to have the possible [Near Miss Indicator](near-miss-indicators) in the game as it requires that the player is able to compare the actual outcome of the play to the possible achievement of the goal."
        ]
    },
    "relations": {
        "instantiates": [
            "near-miss-indicators",
            "perceived-chanceto-succeed",
            "hovering-closures"
        ],
        "modulates": [
            "extended-actions",
            "time-limits",
            "quick-games",
            "race",
            "tension",
            "delayed-effects",
            "combos"
        ],
        "instantiated_by": [
            "connection",
            "illusionary-rewards",
            "traverse",
            "alignment",
            "movement",
            "score",
            "supporting-goals"
        ],
        "modulated_by": [
            "direct-information",
            "game-state-overview"
        ],
        "conflicts": [
            "uncertaintyof-information",
            "memorizing"
        ]
    }
}