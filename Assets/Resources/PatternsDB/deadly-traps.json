{
    "name": "Deadly Traps",
    "texts": {
        "definition": "Deadly Traps are game events that kill Avatars and Units if they are within the area of effect of the trap.",
        "description": [
            "Typical examples of deadly traps include pits, falling blocks, lava, fire, acid, steam, machinery, crushing presses, fast-moving vehicles, and collapsing bridges, but many more are possible."
        ],
        "examples": [
            "Platform games such as \"Super Mario Sunshine\" and \"The Legend of Zelda: Wind Waker\" are filled with a wide variety of deadly traps.",
            "The tracks in \"Super Monkey Ball\" are hovering high above the ground, effectively surrounding the tracks with a \"Deadly Trap.\""
        ],
        "usage": [
            "\"Deadly Traps\" can be divided into three categories: those that are visible and whose effects are clear, those that can be found by noticing differences from the surrounding environment of the trap, and those that cannot be noticed before they are activated. The first type, exemplified by game elements such as crushers, flame dischargers, and so on that follow a certain pattern in activation, allows the players to choose to try to bypass or deactivate the trap, typically requiring \"Timing\" or \"Rhythm-Based Actions\". The second type, exemplified by (badly) camouflaged pits, may instantly kill the player character and thus require the player to be observant of \"Outstanding Features\" in the environment. The last type, exemplified by traps activated by counter-weights when picking up objects, creates \"Surprises\" but also promotes \"Memorizing\" to remember the location of the trap. The last two categories do not have to instantly kill the player character, but can give the player a \"Time Limit\" within which to react, thus increasing \"Tension\".",
            "\"Deadly Traps\" can be used to limit the players' accessible area, either by acting as a barrier to an area or by setting the entire \"Inaccessible Area\" as a \"Deadly Trap\", for example, a lake of acid. When accessible routes are hidden among \"Deadly Traps\" and players cannot distinguish between the two, they force players into making \"Leap of Faith\" actions. \"Shrinking Game Worlds\" can take the form of \"Deadly Traps\", which seal off game areas, e. g., collapsing bridges or cave-ins. Less commonly, \"Deadly Traps\" can be used to open up game areas, e. g., a fallen rock exposes a tunnel. This can be used to enforce the \"Narrative Structure\" of the game and to create or open up \"Inaccessible Areas\".",
            "\"Deadly Traps\" can be used to help \"Guard\" goals and can make it possible to achieve \"Eliminate\" goals without directly attacking opponents."
        ],
        "consequences": [
            "\"Deadly Traps\" introduce \"Consumer\" game elements into the \"Game World\" thatthreaten players with \"Penalties\" of \"Damage\" or loss of \"Lives\" or \"Units\" if the players activate them. Common objects of \"Evade\" goals, \"Deadly Traps\" give players restricted\"Movement\" within their immediate surrounding and can force players into \"Maneuvering\". \"Deadly Traps\" are typically \"Ultra-Powerful Events\".",
            "Depending on whether the trap is known to the player, \"Deadly Traps\" can cause \"Tension\" or \"Surprises\", especially in \"Exploration\" or \"Reconnaissance\" goals. \"Deadly Traps\" can also be used to limit the \"Game World\" in an intuitive way. \"Deadly Traps\" are examples of \"Ultra-Powerful Events\" when they are impossible to \"Evade\" by the players who have activated them.",
            "\"Safe Havens\" cannot be combined with \"Deadly Traps\", since the presence of the trap would make the location unsafe."
        ]
    },
    "relations": {
        "instantiates": [
            "damage",
            "rhythm-based-actions",
            "time-limits",
            "surprises",
            "movement-limitations",
            "tension",
            "leaps-of-faith",
            "memorizing",
            "ultra-powerful-events",
            "timing"
        ],
        "modulates": [
            "evade",
            "exploration",
            "reconnaissance",
            "inaccessible-areas",
            "lives",
            "units",
            "maneuvering",
            "game-world",
            "movement",
            "eliminate",
            "guard",
            "rescue"
        ],
        "instantiated_by": [
            "shrinking-game-world"
        ],
        "modulated_by": [
            "damage",
            "outstanding-features",
            "penalties",
            "consumers"
        ],
        "conflicts": [
            "safe-havens"
        ]
    }
}