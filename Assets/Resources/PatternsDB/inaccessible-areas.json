{
    "name": "Inaccessible Areas",
    "texts": {
        "definition": "Inaccessible Areas are parts of the Game World the player can perceive but cannot currently enter, such as areas behind locked doors or sufficiently high ledges.",
        "description": [
            "Although the area is inaccessible for the player, it may be possible to view the area or affect it in ways other than through movement actions, for example, by shooting or throwing things at it, and the area may not be inaccessible to other types of game elements that are not under player control. It may be possible for the player to enter the area later in the game, for example, by finding the key to the locked door."
        ],
        "examples": [
            "The ghost generator in the middle of the \"Pac-Man\" level is an example of an area the player controlling Pac-Man cannot enter.",
            "Computer roleplaying games use \"Inaccessible Areas\" to guide the players through the \"Game World\" in a manner intended by the game designers.",
            "\"The Legend of Zelda\" series contains many areas that are initially blocked by boulders, locked doors, or other obstacles. The player can remove these obstacles after having acquired certain items or abilities, for example, by using bombs to blow away blocking boulders and special keys to open the locked doors."
        ],
        "usage": [
            "The primary design choice when creating \"Inaccessible Areas\" is to decide what is blocking the access. One of the most obvious uses is to place \"Obstacles\" in the \"Game World\" in such way that they block access to an area. Depending on the nature of the \"Obstacles\" actions other than movement can be blocked, such as vision. For example, deep chasms and great height differences can block the vision but still allow the player to shoot or throw other kinds of game elements at the obstacle. Windows and \"Invisible Walls\" do not block vision but can block all the access from other game elements. Locked or blocked doors block both vision and other types of game elements. The \"Inaccessible Area\" may also be inaccessible due to its own nature. For example, an area containing lava, water, or poisonous atmospheres can make it impossible or difficult for \"Avatars\" and \"Units\" to enter the area and can even make the whole area one big \"Deadly Trap\". \"Inaccessible Areas\" can be used to create \"Leaps of Faith\" in which players have no perception of what part of an area is inaccessiblebecause of a \"Deadly Trap\" and which part of an area is safe to enter.",
            "The \"Inaccessible Area\" can in some cases be accessible for certain types of game elements, and the nature of these elements should comply with the \"Consistent Reality Logic\" of the game. For example, if water is used to block an area in a strategy game, it might follow that boat \"Units\" can enter the water area but other \"Units\" cannot. This is also an example how \"Inaccessible Areas\" together with \"Privileged Movements\" for certain game elements can have \"Orthogonal Unit Differentiation\". This kind of unit design may also be used to create \"Safe Havens\".",
            "The \"Inaccessible Area\" may be the initial location of the game elements but may be inaccessible during the actual gameplay, making it a form of a \"Safe Haven\". This is typically used in team-based first-person shooters where \"Spawn Points\" are placed so that players \"Spawning\" cannot be attacked directly at that location. By using \"Privileged Movement\", these \"Safe Havens\" and \"Resource Locations\" may be accessible to only one team in the game, ensuring a minimal area of control to each team. Making initially \"Inaccessible Areas\" possible to enter after players have completed goals or demonstrated competences in performing necessary actions is one way to create \"Smooth Learning Curves\". This can promote \"Replayability\" of \"Levels\" during gameplay or \"Replayability\" on whole games if the \"Inaccessible Areas\" are part of \"Optional Goals\" or \"Easter Eggs\".",
            "The players' perception of an \"Inaccessible Area\" depends on the exact position of the players and their knowledge about current goals and dangers. For example, an area may be perceived as an \"Inaccessible Area\" when there is an \"Enemy\" guarding the route through the area or a player \"Camping\" in the area."
        ],
        "consequences": [
            "The main use of \"Inaccessible Areas\" is to make \"Game Worlds\" and \"Levels\" that are limited in size appear larger, thereby maintaining a \"Consistent Reality Logic\". They restrict players \"Freedom of Choice\" by imposing \"Movement Limitations\" on players and affect how players can conduct \"Movement\" to enact \"Game World Navigation\".",
            "\"Inaccessible Areas\" do not have to be areas in the actual \"Game World\" but simply provide players with an illusion that the \"Game World\" or \"Level\" is larger than it is. However, some \"Inaccessible Areas\" are true areas and can come into play. \"Inaccessible Areas\" that can be reached through solving subgoals may be used as \"Traverse\" goals. Used in this fashion, gaining access to these areas can be used to maintain the \"Narrative Structure\" of the game, especially in cases where the obstacle blocking the access clearly indicates the possibility for later gaining access to the area motivates the player. \"Inaccessible Areas\" can, however, also cause player frustration, especially in cases where it seems like a player can later access an area even though that's not the case. For example, having a locked door in an adventure game where there is no possibility for getting the right key will frustrate most players."
        ]
    },
    "relations": {
        "instantiates": [
            "traverse",
            "consistent-reality-logic"
        ],
        "modulates": [
            "game-world-navigation",
            "leaps-of-faith",
            "smooth-learning-curves",
            "game-world",
            "levels",
            "spawn-points",
            "spawning",
            "camping",
            "movement"
        ],
        "instantiated_by": [
            "movement-limitations",
            "invisible-walls",
            "obstacles"
        ],
        "modulated_by": [
            "deadly-traps",
            "safe-havens",
            "privileged-movement",
            "resource-locations",
            "levels",
            "replayability",
            "orthogonal-unit-differentiation"
        ],
        "conflicts": [
            "freedom-of-choice"
        ]
    }
}